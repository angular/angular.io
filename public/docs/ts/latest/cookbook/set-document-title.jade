include ../_util-fns

:marked
  **TODO Items (so I don't forget them later)**:

  * <span style="background-color: yellow ;">Insert link to Title service document.</span>
  * <span style="background-color: yellow ;">Get Plunkr working for live code example.</span>

  ----

  In an AngularJS 1.x application, you were able to bootstrap your Angular code on top of the entire HTML document.
  This meant that you could create a root component that provided a scope value that defined the HTML `title` tag, 
  `<title>{{ pageTitle }}</title>`. In Angular 2, however, the root component of your application is an element 
  contained within the `body` tag. This means that your Angular 2 application doesn't have native access to the 
  `title` tag in the same way that it used to.

  Fortunately, Angular 2 bridges this gap by providing a `Title` service as part of the **Browser platform**. The
  `Title` service is a simple class that provides an API for getting and setting the current HTML document title:

  * `getTitle() : string` &mdash; Gets the title of the current HTML document.
  * `setTitle( newTitle : string )` &mdash; Sets the title of the current HTML document.

  While this class is provided as part of the Browser platform package, it is *not part of the default Browser 
  platform providers*. This means that even if you bootstrap your application using the Browser platform `boostrap()`
  function, you'll still need to explicitly include `Title` as one of the custom providers:

+makeExample( "cb-set-document-title/ts/app/main.ts", "bootstrap-simple", "app/main.ts" )

:marked
  Once you've explicitly provided the `Title` service you can then inject the `Title` service into any of your
  custom application components and services. To see this in action, let's take a look at how the provided `Title`
  service can be injected into one of our Angular 2 components and then used to set the document title:

  **See the [live example](/resources/live-examples/cb-set-document-title/ts/plnkr.html)**.

+makeExample( "cb-set-document-title/ts/app/app.component.ts", "", "app/app.component.ts" )

.callout.is-helpful
  header Title Is Platform Specific
  :marked
    The `Title` service is provided as part of the Browser platform. This means that if you bootstrap your application using another platform, you'll have to provide a different `Title` service that understand the concept of a "document title" for that specific platform.

:marked
  [Back to top](#top)