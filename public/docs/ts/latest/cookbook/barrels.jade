include ../_util-fns

<a id="top"></a>
:marked
  This cookbook contains recipes for creating barrels to simplify file imports. In Angular 2 apps, we frequently find
  ouselves importing multiple files together (for example, in the tutorial app, the hero component and the hero service 
  are both frequently imported together into other components). We can create a single import that contains them both. 
  This is called a barrel.

<a id="toc"></a>
:marked
  ## Table of contents
  
  [Creating a barrel](#creating-a-barrel)

  [Importing a barrel](#importing-a-barrel)

:marked
  **See the [live example](/resources/live-examples/cb-barrels/ts/plnkr.html)**.

.l-main-section
<a id="creating-a-barrel"></a>
:marked
  ## Creating a barrel
  
  'Hero', `HeroDetailComponent`, `HeroService`, and `HeroesComponent` are all frequently used together.  Each of them
  are moved into a `heroes` directory with their supporting files:
  
  <pre class="prettyprint prettyprinted">
    /heroes
      hero-detail.component.css
      hero-detail.component.html
      hero-detail.component.ts
      hero-service.ts
      hero.ts
      heroes.component.css
      heroes.component.html
      heroes.component.ts
  </pre>
  
  An `index.ts` file is created in the `/heroes` directory. And each of the files is imported and re-exported:
+makeExample('cb-barrels/ts/app/heroes/index.ts')

:marked
  Each of the files are now available as a single import. 
  
<a id="importing-a-barrel"></a>
:marked
  ## Importing a barrel
  The app component imports `HeroesComponent`, `HeroDetailComponent`, and `HeroService` with a
  single import:
+makeExample('cb-barrels/ts/app/app.component.ts')

:marked
  The dashboard component imports `Hero` and `HeroService` with a single import:
+makeExample('cb-barrels/ts/app/dashboard.component.ts')

:marked
  The `main.ts` bootstrap file imports `HeroService`
+makeExample('cb-barrels/ts/app/main.ts')

:marked
  The `mock-heroes.ts` file imports `Hero`:
+makeExample('cb-barrels/ts/app/mock-heroes.ts')

:marked
  The files inside the `/heroes` barrel are updated to add `../` to module imports outside the barrel. They are also
  updated to use the barrel for any references within the barrel using `../heroes`. 
