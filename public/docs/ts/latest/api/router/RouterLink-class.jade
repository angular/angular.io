
p.location-badge.
  exported from <a href='../router'>angular2/router</a>
  defined in <a href="https://github.com/angular/angular/tree/2.0.0-alpha.34/modules/angular2/src/router/router_link.ts#L5-L61">angular2/src/router/router_link.ts (line 5)</a>

:markdown
  The RouterLink directive lets you link to specific parts of your app.
  
  Consider the following route configuration:
  
  ```
  @RouteConfig([
    { path: '/user', component: UserCmp, as: 'user' }
  ]);
  class MyComp {}
  ```
  
  When linking to this `user` route, you can write:
  
  ```
  <a [router-link]="['./user']">link to user component</a>
  ```
  
  RouterLink expects the value to be an array of route names, followed by the params
  for that level of routing. For instance `['/team', {teamId: 1}, 'user', {userId: 2}]`
  means that we want to generate a link for the `team` route with params `{teamId: 1}`,
  and with a child route `user` with params `{userId: 2}`.
  
  The first route name should be prepended with `/`, `./`, or `../`.
  If the route begins with `/`, the router will look up the route from the root of the app.
  If the route begins with `./`, the router will instead look in the current component's
  children for the route. And if the route begins with `../`, the router will look at the
  current component's parent.
  
  

.l-main-section
  h2 Annotations
  .l-sub-section
    h3.annotation Directive
    pre.prettyprint
      code.
        @Directive({
          selector: &#39;[router-link]&#39;,
          properties: [&#39;routeParams: routerLink&#39;],
          host: {&#39;(^click)&#39;: &#39;onClick()&#39;, &#39;[attr.href]&#39;: &#39;visibleHref&#39;}
        })


.l-main-section
  h2 Members
  .l-sub-section
    h3 constructor

    
    pre.prettyprint
      code.
        constructor(_router: Router, _location: Location)
    
    :markdown
      
      




  .l-sub-section
    h3 visibleHref

    
    :markdown
      
      





  .l-sub-section
    h3 routeParams

    
    :markdown
      
      





  .l-sub-section
    h3 onClick

    
    pre.prettyprint
      code.
        onClick()
    
    :markdown
      
      




