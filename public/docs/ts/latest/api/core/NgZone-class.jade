
p.location-badge.
  exported from <a href='../core'>angular2/core</a>
  defined in <a href="https://github.com/angular/angular/tree/2.0.0-alpha.34/modules/angular2/src/core/zone/ng_zone.ts#L6-L279">angular2/src/core/zone/ng_zone.ts (line 6)</a>

:markdown
  A wrapper around zones that lets you schedule tasks after it has executed a task.
  
  The wrapper maintains an "inner" and an "mount" `Zone`. The application code will executes
  in the "inner" zone unless `runOutsideAngular` is explicitely called.
  
  A typical application will create a singleton `NgZone`. The outer `Zone` is a fork of the root
  `Zone`. The default `onTurnDone` runs the Angular change detection.
  
  
.l-main-section
  h2 Members
  .l-sub-section
    h3 constructor

    
    pre.prettyprint
      code.
        constructor({enableLongStackTrace}: any)
    
    :markdown
      Associates with this
      
      - a "root" zone, which the one that instantiated this.
      - an "inner" zone, which is a child of the root zone.
      




  .l-sub-section
    h3 overrideOnTurnStart

    
    pre.prettyprint
      code.
        overrideOnTurnStart(onTurnStartFn: Function)
    
    :markdown
      Sets the zone hook that is called just before Angular event turn starts.
      It is called once per browser event.
      
      





  .l-sub-section
    h3 overrideOnTurnDone

    
    pre.prettyprint
      code.
        overrideOnTurnDone(onTurnDoneFn: Function)
    
    :markdown
      Sets the zone hook that is called immediately after Angular processes
      all pending microtasks.
      
      





  .l-sub-section
    h3 overrideOnEventDone

    
    pre.prettyprint
      code.
        overrideOnEventDone(onEventDoneFn: Function, opt_waitForAsync: boolean)
    
    :markdown
      Sets the zone hook that is called immediately after the last turn in
      an event completes. At this point Angular will no longer attempt to
      sync the UI. Any changes to the data model will not be reflected in the
      DOM. `onEventDoneFn` is executed outside Angular zone.
      
      This hook is useful for validating application state (e.g. in a test).
      
      





  .l-sub-section
    h3 overrideOnErrorHandler

    
    pre.prettyprint
      code.
        overrideOnErrorHandler(errorHandlingFn: Function)
    
    :markdown
      Sets the zone hook that is called when an error is uncaught in the
      Angular zone. The first argument is the error. The second argument is
      the stack trace.
      
      





  .l-sub-section
    h3 run

    
    pre.prettyprint
      code.
        run(fn: () =&gt; any)
    
    :markdown
      Runs `fn` in the inner zone and returns whatever it returns.
      
      In a typical app where the inner zone is the Angular zone, this allows one to make use of the
      Angular's auto digest mechanism.
      
      ```
      var zone: NgZone = [ref to the application zone];
      
      zone.run(() => {
        // the change detection will run after this function and the microtasks it enqueues have
      executed.
      });
      ```
      
      





  .l-sub-section
    h3 runOutsideAngular

    
    pre.prettyprint
      code.
        runOutsideAngular(fn: () =&gt; any)
    
    :markdown
      Runs `fn` in the outer zone and returns whatever it returns.
      
      In a typical app where the inner zone is the Angular zone, this allows one to escape Angular's
      auto-digest mechanism.
      
      ```
      var zone: NgZone = [ref to the application zone];
      
      zone.runOutsideAngular(() => {
        element.onClick(() => {
          // Clicking on the element would not trigger the change detection
        });
      });
      ```
      
      




