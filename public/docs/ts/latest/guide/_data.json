{
  "index": {
    "title": "Documentation Overview",
    "navTitle": "Overview",
    "intro": "How to read and use this documentation",
    "nextable": true,
    "basics": true
  },

  "setup": {
    "title": "Setup for local development",
    "navTitle": "Setup",
    "intro": "Install the Angular QuickStart seed for faster, more efficient development on your machine",
    "nextable": true,
    "hideNextPage": true,
    "basics": true
  },

  "learning-angular": {
    "title": "Learning Angular",
    "navTitle": "Learning Angular",
    "intro": "A suggested path through the documentation for Angular newcomers",
    "nextable": true,
    "hideNextPage": true,
    "basics": true
  },

  "architecture": {
    "title": "Architecture Overview",
    "navTitle": "Architecture",
    "intro": "The basic building blocks of Angular applications",
    "nextable": true,
    "basics": true
  },


  "appmodule": {
    "title": "AppModule: the root module",
    "navTitle": "The Root Module",
    "intro": "Tell Angular how to construct and bootstrap the app in the root \"AppModule\".",
    "nextable": true,
    "basics": true
  },

  "displaying-data": {
    "title": "Displaying Data",
    "intro": "Property binding helps show app data in the UI.",
    "nextable": true,
    "basics": true
  },

  "user-input": {
    "title": "User Input",
    "intro": "User input triggers DOM events. We listen to those events with event bindings that funnel updated values back into our components and models.",
    "nextable": true,
    "basics": true
  },

  "forms": {
    "title": "Forms",
    "intro": "A form creates a cohesive, effective, and compelling data entry experience. An Angular form coordinates a set of data-bound user controls, tracks changes, validates input, and presents errors.",
    "nextable": true,
    "basics": true
  },

  "dependency-injection": {
    "title": "Dependency Injection",
    "intro": "Angular's dependency injection system creates and delivers dependent services \"just-in-time\".",
    "nextable": true,
    "basics": true
  },

  "template-syntax": {
    "title": "Template Syntax",
    "intro": "Learn how to write templates that display data and consume user events with the help of data binding.",
    "nextable": true,
    "basics": true
  },

  "cheatsheet": {
    "title": "Cheat Sheet",
    "subtitle": "TypeScript",
    "nextable": true,
    "basics": true
  },

  "style-guide": {
    "title": "Style Guide",
    "intro": "Write Angular with style.",
    "basics": true
  },

  "glossary": {
    "title": "Glossary",
    "intro": "Brief definitions of the most important words in the Angular vocabulary",
    "basics": true
  },

  "change-log": {
    "title": "Change Log",
    "intro": "An annotated history of recent documentation improvements.",
    "basics": true
  },

  "ngmodule": {
    "title": "Angular Modules (NgModule)",
    "intro": "Define application modules with @NgModule"
  },

  "animations": {
    "title": "Animations",
    "intro": "A guide to Angular's animation system."
  },

  "attribute-directives": {
    "title": "Attribute Directives",
    "intro": "Attribute directives attach behavior to elements."
  },

  "browser-support": {
    "title": "Browser support",
    "intro": "Browser support and polyfills guide."
  },

  "component-styles": {
    "title": "Component Styles",
    "intro": "Learn how to apply CSS styles to components."
  },

  "hierarchical-dependency-injection": {
    "title": "Hierarchical Dependency Injectors",
    "navTitle": "Hierarchical Injectors",
    "intro": "Angular's hierarchical dependency injection system supports nested injectors in parallel with the component tree."
  },

  "server-communication": {
    "title": "HTTP Client",
    "intro": "Use an HTTP Client to talk to a remote server."
  },

  "lifecycle-hooks": {
    "title": "Lifecycle Hooks",
    "intro": "Angular calls lifecycle hook methods on directives and components as it creates, changes, and destroys them."
  },

  "npm-packages": {
    "title": "Npm Packages",
    "intro": "Recommended npm packages, and how to specify package dependencies"
  },

  "pipes": {
    "title": "Pipes",
    "intro": "Pipes transform displayed values within a template."
  },

  "deployment": {
    "title": "Deployment",
    "intro": "Learn how to deploy your Angular app."
  },

  "router": {
    "title": "Routing & Navigation",
    "intro": "Discover the basics of screen navigation with the Angular Router."
  },

  "security": {
    "title": "Security",
    "intro": "Developing for content security in Angular applications"
  },

  "setup-systemjs-anatomy": {
    "title": "Setup Anatomy",
    "intro": "Inside the local development environment for SystemJS"
  },

  "structural-directives": {
    "title": "Structural Directives",
    "intro": "Angular has a powerful template engine that lets us easily manipulate the DOM structure of our elements."
  },

  "testing": {
    "title": "Testing",
    "intro": "Techniques and practices for testing an Angular app"
  },

  "typescript-configuration": {
    "title": "TypeScript Configuration",
    "intro": "TypeScript configuration for Angular developers"
  },

  "upgrade": {
    "title": "Upgrading from AngularJS",
    "intro": "Incrementally upgrade an AngularJS application to Angular."
  },

  "webpack": {
    "title": "Webpack: an introduction",
    "intro": "Create Angular applications with a Webpack based tooling"
  }
}
