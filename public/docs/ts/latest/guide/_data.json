{
  "_listtype": "ordered",

  "index": {
    "title": "Developer Guides"
  },

  "cheatsheet": {
    "title": "Angular Cheat Sheet"
  },

  "displaying-data": {
    "title": "Displaying Data",
    "intro": "In Angular, we display data by binding component properties to elements in HTML templates using interpolation and other forms of Property Binding."
  },

  "user-input": {
    "title": "User Input",
    "intro": "User input triggers DOM events. We listen to those events with EventBindings that funnel updated values back into our components and models."
  },
    
  "forms": {
    "title": "Forms",
    "intro": "A form creates a cohesive, effective, and compelling data entry experience. An Angular form coordinates a set of data-bound user controls, tracks changes, validates input, and presents errors."
  },
    
  "pipes": {
    "title": "Pipes",
    "intro": "Pipes transform displayed values within a template"
  },
 
  "template-syntax": {
    "title": "Template Syntax",
    "intro": "How to write templates that display data and consume user events with the help of data binding."
  },

  "dependency-injection": {
    "title": "Dependency Injection",
    "intro": "Angular's dependency injection system creates and delivers dependent services \"just-in-time\"."
  },
  
  "hierarchical-dependency-injection": {
    "title": "Hierarchical Injectors",
    "intro": "Angular's hierarchical dependency injection system supports nested injectors in parallel with the component tree."
  },
  "glossary": {
    "title": "Glossary",
    "intro": "Brief definitions of the most important words in the Angular 2 vocabulary"
  }
}