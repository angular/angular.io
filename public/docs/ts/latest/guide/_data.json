{
  "_listtype": "ordered",

  "index": {
    "title": "Developer Guides"
  },

  "cheatsheet": {
    "title": "Angular Cheat Sheet"
  },

  "displaying-data": {
    "title": "Displaying Data",
    "intro": "Displaying data is job number one for any good application. In Angular, you bind data to elements in HTML templates and Angular automatically updates the UI as data changes."
  },

  "user-input": {
    "title": "User Input",
    "intro": "DOM events drive user input in Angular. You can use the native events like click, mouseover, and keyup. Angular uses a special syntax to register events to DOM elements. This section covers all the ins and outs of using the event syntax."
  },
  
  "pipes": {
    "title": "Pipes",
    "intro": "Pipes transform displayed values within a template"
  },
 
  "template-syntax": {
    "title": "Template Syntax",
    "intro": "How to write templates that display data and consume user events with the help of data binding."
  },

  "dependency-injection": {
    "title": "Dependency Injection",
    "intro": "Angular's dependency injection system creates and delivers dependent services \"just-in-time\"."
  },
  
  "hierarchical-dependency-injection": {
    "title": "Hierarchical Injectors",
    "intro": "Angular's hierarchical dependency injection system supports nested injectors in parallel with the component tree."
  },
  "glossary": {
    "title": "Glossary",
    "intro": "Brief definitions of the most important words in the Angular 2 vocabulary"
  }
}