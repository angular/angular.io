include ../../../../../_includes/_util-fns

:marked
  There are many syntactical differences between Angular 1.x and Angular 2.
  This chapter provides a quick reference guide to some of the common Angular 1.x
  syntax and its equivalent in Angular 2.

.l-main-section
:marked
  ## Template Basics
  Templates are the user-facing part of an Angular application written in HTML.
  The following are some of the key Angular 1.x template features with the equivalent
  template syntax in Angular 2.

table
  tr
    th Angular 1.x
    th Angular 2
  tr
    td <b>Bindings</b>
    td <b>Bindings</b>
  tr
    td
      :marked
        ```
        <h2 class='title'>{{vm.title}}</h2>
        ```
        In Angular 1, the binding is prefixed with the controller alias because we
        had to be specific about the source of the binding.
    td
      :marked
        ```
        <h2 class='title'>{{title}}</h2>
        ```
        In Angular 2, the context of the binding is implied and is always the
        associated component. So it needs no reference variable.
  tr
    td <b>Filters</b>
    td <b>Pipes</b>
  tr
    td
      :marked
        ```
        {{ movie.releaseDate | date }}
        ```
        To filter output in our templates, we use filters in Angular 1.x.
        In this example, we filter the releaseDate to format it as a date.
    td
      :marked
        ```
        {{ movie.releaseDate | date }}
        ```
        In Angular 2, we use pipes to filter output. Many (but not all) of the built-in filters from Angular 1.x are
        built-in pipes in Angular 2. See the heading "Pipes" below for more information.
  tr
    td <b>Local variables</b>
    td <b>Local variables</b>
  tr
    td
      :marked
        ```
        <tr ng-repeat='movie in vm.movies'></tr>
        ```
      :marked
        Here, `movie` is a user-defined local variable.
    td
      :marked
        ```
        <tr *ng-for='#movie of vm.movies'></tr>
        ```
        In Angular 2, we have true local variables that are explicitly defined using the hash (#) symbol.


:marked
  ## Template Directives
  Angular 1.x provided many built-in directives. 
  Many of them are replaced or are no longer needed in Angular 2. 
  The following are some of the key Angular 1.x directives and the equivalent feature in Angular 2.

table
  tr
    th Angular 1.x
    th Angular 2
  tr
    td <b>ng-app</b>
    td <b>Not needed</b>
  tr
    td
      :marked
        ```
        <body ng-app='movieHunter'>
        ```
        The ng-app directive bootstrapped Angular 1.x and gave it the name of the main application module.
    td
      In Angular 2, the bootstrapping is handled in code instead of in the template.
      By convention, that code is in a file named bootstrap.ts and looks like this:<br><br>
      :marked
        ```
        import {bootstrap} from ‘angular2/platform/browser’
        import {AppComponent} from ‘./app.component’
        
        bootstrap(AppComponent);
        ```
  tr
    td <b>ng-click</b>
    td <b>Event binding</b>
  tr
    td
      :marked
        ```
        <button type='button' 
                class='btn btn-info'
                ng-click='vm.toggleImage()'>
          Show Poster
        </button>
        ```
        In Angular 1.x, the ng-click directive allows us to specify custom behavior when an element is clicked.
        When this button is clicked, the `toggleImage()` method in the controller referenced by the vm controller as alias is executed.
    td
      :marked
        ```
        <button type='button' 
                class='btn btn-info' 
                (click)='toggleImage()'>
            Show Poster
        </button>
        ```
        The Angular 1.x event-based directives do not exist in Angular 2. 
        Rather, we use event bindings by defining the name of the event within parenthesis. 
        When this button is clicked, the `toggleImage()` method in the associated component is executed.<br>
        NOTE: To follow current Angular practices, we should prefix the method with “on”. So in this case: `onToggleImage()`.
