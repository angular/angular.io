
include ../../../../_includes/_util-fns
:marked
  [How do I fetch `JSON` data](#fetch-json)<br>
  [How do I post `JSON` data](#http-client)<br>
  [How do I set search params](#fetch-data)<br>
  [How do I make JSONP calls](#rxjs)<br>
  [How do I handle errors](#enable-rxjs-operators)<br>

.l-main-section
:marked
  ### How do I fetch `JSON` data
  <a id="fetch-json"></a>
  The `Http` client in Angular is heavily inspired by the new [Fetch](https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API) api,
  which does not automatically attempt to parse the response body. In order to get a JavaScript object from a response body, that
  we know is formatted as proper `JSON` we have to call the `json()` method on the `Response` object explicitly.
  
  ```
  Http.get('http://some-endpoint.com/fetch/data')
      .map(res => res.json())
  ```
  We use `map(fn)` on the `Observable<Response>` to make that happen.

  ### How do I set specific headers
  <a id="set-headers"></a>
  All request methods take a [`RequestOptions`](../api/http/RequestOptions-class.html) object as the last parameter. The [`RequestOptions`](../api/http/RequestOptions-class.html) define a `headers` property of type [`Headers`](../api/http/Headers-class.html),
  that we use to set any specific headers.
  ```
  let headers = new Headers({ 'Content-Type': 'application/json' });
  let options = new RequestOptions({ headers: headers });
  let body = JSON.stringify({ name: 'Magneta' });
  Http.post('http://some-endpoint.com/fetch/data', body, options);
  ```

  ### How do I make requests with search parameters?
  <a id="set-headers"></a>
  All request methods take a [`RequestOptions`](../api/http/RequestOptions-class.html) object as the last parameter. The [`RequestOptions`](../api/http/RequestOptions-class.html) define a `search` property of type [`URLSearchParams`](../api/http/URLSearchParams-class.html),
  that we use to set these parameters.

  ```
  var params = new URLSearchParams();
  params.set('name', 'magneta');
  let options = new RequestOptions({ search: params });
  Http.get('http://some-endpoint.com/fetch/data', options);
  ```
  
