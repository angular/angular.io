include ../../../../_includes/_util-fns

figure
  img(src="/resources/images/devguide/intro/people.png" alt="Us" align="left" style="width:200px; margin-left:-40px;margin-right:10px" )
:marked
  The Developer Guide is a practical guide to Angular for experienced programmers who
  are building client applications in HTML and JavaScript.

  We are on a journey together to understand how Angular works and, more importantly,
  how to make it work for us.  This chapter begins the journey.
  <br clear="all">
   
<a id="how-to-read"></a>
:marked
  # How to Read this Guide
  
  The guide consists of chapters devoted to the challenges of building an application and 
  meeting those challenges with Angular.
  
  ## Learning Path
  We don't have to read the guide straight through.  Most chapters stand on their own. 
   
  There is a learning path for those of us who are new to Angular.

  1. Read the [Architecture Overview](architecture.html) to get the big picture.
  
  1. Step *outside* the guide and try the [QuickStart](../quickstart.html). The QuickStart is the "Hello, World" of Angular 2. 
  It shows us how to setup the libraries and tools we'll need to write *any* Angular app. 
  
  1. Follow the [Tutorial](../tutorial). The "Tour of Heroes" tutorial takes us step-by-step from where QuickStart leaves off 
  to a simple data-driven app. 
  Simple, yes, but with the essential characteristics we'd expect of a professional application:
  a sensible project structure, data binding, master/detail, services, dependency injection, navigation, and remote data access. 
  
    Return to the developers guide.
    
  1. [Displaying Data](displaying-data.html) explains how to get information on to the screen.
  
  1. [User Input](user-input.html) covers the basics of responding to user behavior.
  
  1. [Forms](forms.html) handle user data entry and validation within the UI.
  
  1. [Dependency Injection](dependency-injection.html) is the way we build large, maintainable applications
  from small, single purpose parts.
  
  1. [Template Syntax](template-syntax.html) is a comprehensive study of Angular template HTML. 

  With this foundation, we can read and understand any chapter in the guide.
  
  ## Code Samples
  
  Every chapter includes code snippets that we can reuse in our own applications. 
  These snippets are excerpts from a sample application that accompanies the chapter.
  
  Look for a link to a running version of that sample near the top of each page
  such as this [live example](/resources/live-examples/architecture/ts/plnkr.html) from the [Architecture](architecture.html) chapter.
  
  The link launches a browser-based code editor where we can inspect, modify, save, and download the code.
  
  A few early chapters are written as tutorials and are clearly marked as such. 
  Most chapters are *not* tutorials. 
  They highlight key points in code rather than explain each step necessary to build the sample.
  We can always get the full source by way of the live link.
  
  ## Other Resources
    
  The [Cheat Sheet](cheatsheet.html) lists Angular syntax for common scenarios.
  
  The [API Guide](../api/) is the authority on every public-facing member of the Angular libraries.
 
  ## Feedback
  
  We welcome feedback! Leave a comment by clicking the icon in upper right corner of the banner.
  
  Post *documentation* issues and pull requests on the 
  [angular.io](https://github.com/angular/angular.io) github repository.
  
  Post issues with *Angular 2 itself* to the [angular](https://github.com/angular/angular) github repository.
  