block includes
  include ../_util-fns

figure
  img(src="/resources/images/devguide/intro/people.png" width="200px" height="152px" alt="Us" align="left" style="margin-left:-40px;margin-right:10px" )
:marked
  Everyone learns differently.
  You don't have to read the documentation straight through.  Most pages stand on their own.
  Those new to Angular may wish to follow this popular learning path.
  <br class="l-clear-left">

  1. [Setup](setup.html "Setup locally withe Quickstart seed") for local Angular development, if you haven't already done so.

  1. Take the [*Tour of Heroes* tutorial](../tutorial "Tour of Heroes"). 
  
    The *Tour of Heroes* takes you step-by-step from [setup](setup.html)
    to a full-featured example that demonstrates the essential characteristics of a professional application:
    a sensible project structure, data binding, master/detail, services, dependency injection, navigation, and remote data access.

  1. <a id="architecture"></a>Read the [Architecture](architecture.html) overview for the big picture.
  
  1. [The Root Module](appmodule.html) introduces the `NgModule` class that tells Angular how to compile and run your application.

  1. [Displaying Data](displaying-data.html) shows how data binding puts component property values on screen.

  1. [User Input](user-input.html) explains how to respond to user-initiated DOM events.

  1. [Forms](forms.html) covers data entry and validation within the UI.

  1. [Dependency Injection](dependency-injection.html) is the way to build large, maintainable applications
  from small, single-purpose parts.

  1. [Template Syntax](template-syntax.html) is a comprehensive study of Angular template HTML.

  After reading the above sections, feel free to skip around among the other pages on this site.

.l-sub-section
  :marked
    ### Next Step

    Try the [tutorial](../tutorial "Tour of Heroes") if you're ready to start coding or 
    visit the [Architecture](architecture.html "Basic Concepts") page if you prefer to learn the basic concepts first.
