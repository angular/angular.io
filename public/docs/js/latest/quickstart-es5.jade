.callout.is-helpful
  header Angular is in developer preview
  p.
    This quickstart does not reflect the final development process for writing apps with Angular.
    The following setup is for those who want to try out Angular while it is in developer preview.


// STEP 1 - Create a project ##########################
.l-main-section
  h2#section-create-project 1. Create a project

  p.
    The goal of this quickstart is to write a component that displays a simple message. This quickstart is for writing Angular components in ES5. There is also a <a href="/docs/dart/latest/quickstart.html">Dart</a> and <a href="/docs/js/latest/quickstart.html">TypeScript</a> version available.
  
  p.
    To get started, create a new empty project directory. The commands below are run from this directory.

  p.
    Next, create two empty files, <code>index.html</code> and <code>app.ts</code>, both at the root of the project:

  pre.prettyprint
    $ touch app.js index.html

// STEP 2 - Create a component controller ##########################
.l-main-section

  h2#section-angular-create-account 2. Create a component controller

  p.
    Components structure and represent the UI. This quickstart demonstrates the process of creating a component
    that has an HTML tag named <strong><code>&lt;my-app&gt;</code></strong>.

  p 
    | A component consists of two parts. The first being the <strong>component controller</strong>. The controller defined using a constructor function.

  pre.prettyprint.linenums
    code.
      function MyAppComponent() { 
        this.name = 'Alice';
      }

// STEP 3 - Define the <code>.annotations</code> property ##########################
.l-main-section

  h2#section-annotations-property 3. Define the <code>.annotations</code> property

  p.
    The second part of a component are the annotations. Angular uses annotations to declare metadata about a component. These annotations tell Angular how to place the component into the page.
    
  p.
    In ES5, annotations are declared by specifying the <code>.annotations</code> property on the constructor function of the component's controller.
      
  p.
    All the available annotations in Angular are available off of the <code>window.angular</code> object.
    
  pre.prettyprint.linenums
    code.
      function MyAppComponent() { 
        this.name = 'Alice';
      }
      MyAppComponent.annotations = [
        new angular.ComponentAnnotation({ 
          selector: 'my-app'
        }),
        new angular.ViewAnnotation({
          template: '&lt;h1&gt;Hello {{ name }}&lt;/h1&gt;'
        })
      ];
    
  .l-sub-section
    h3 <code>ComponentAnnotation</code>
    p.
      The <code>ComponentAnnotation</code> annotation defines the HTML tag for the component by specifying the component's CSS selector.
      
    pre.prettyprint.linenums
      code.
        function MyAppComponent() { }
        MyAppComponent.annotations = [
          new angular.ComponentAnnotation({
            selector: 'my-app' // Defines the &lt;my-app&gt;&lt;/my-app&gt; tag
          })
        ];
      
  .l-sub-section
    h3 <code>ViewAnnotation</code>
    p.
      The <code>ViewAnnotation</code> annotation defines the HTML that represents the component. The component you wrote uses an inline template, but you can also have an external template. To use an external template, specify a <code>templateUrl</code> property and give it the path to the HTML file.

    pre.prettyprint.linenums
      code.
        function MyAppComponent() { }
        MyAppComponent.annotations = [
          new angular.ComponentAnnotation({
            selector: 'my-app' // Defines the &lt;my-app&gt;&lt;/my-app&gt; tag
          }),
          new angular.ViewAnnotation({
            template: '&lt;h1&gt;Hello {{ name }}&lt;/h1&gt;' // Defines the inline template for the component
          })
        ];
    p.
      The annotations above specify an HTML tag of <code>&lt;my-app&gt;</code>
      and a template of <code ng-non-bindable>&lt;h1&gt;Hello &#123;&#123; name }}&lt;/h1&gt;</code>.
      
    p.
      A component with a <code>ViewAnnotation</code> will always come with an accompanying <code>ComponentAnnotation</code>.

  .l-sub-section
    h3 The template and the component controller

    p.
      The component controller is the backing of the component's template. This component
      controller uses a constructor function.

    pre.prettyprint.linenums
      code.
        function MyAppComponent() {
          this.name = 'Alice';
        }

    p.
      Templates read from their component controllers. Templates have access to any properties
      or functions placed on the component controller.

    p.
      The template above binds to a <code>name</code> property through
      the double-mustache syntax (<code ng-non-bindable>{{ ... }}</code>).
      The body of the constructor function assigns "Alice" to the name property. When the
      template renders, "Hello Alice" appears instead of
      <span ng-non-bindable>"Hello {{ name }}"</span>.



// STEP 4 - Bootstrap ##########################
.l-main-section
  h2#section-transpile 4. Bootstrap

  p.
    At the bottom of <code>app.js</code>, call the <code>angular.bootstrap()</code> function to load your new component into its page:

  pre.prettyprint.linenums
    code angular.bootstrap(MyAppComponent);


  p.
    The <code>bootstrap()</code> function takes a component as a parameter, enabling the component (as well as any child components it contains) to render.


// STEP 5 - Declare the HTML ##########################
.l-main-section

  h2#section-angular-create-account 5. Declare the HTML

  p.
    Inside the <code>head</code> tag of <code>index.html</code>, include the Angular ES5 bundle, and the <code>app.js</code> file written above. Instantiate the <code>my-app</code> component in the <code>body</code>.

  pre.prettyprint.linenums
    code.
      &lt;!-- index.html --&gt;
      &lt;html&gt;
        &lt;head&gt;
          &lt;title&gt;Angular 2 Quickstart&lt;/title&gt;
          &lt;script src="https://code.angularjs.org/2.0.0-alpha.22/angular2.sfx.dev.js"&gt;&lt;/script&gt;
          &lt;script src="app.js"&gt;&lt;/script&gt;
        &lt;/head&gt;
        &lt;body&gt;

          &lt;!-- The app component created in app.ts --&gt;
          &lt;my-app&gt;&lt;/my-app&gt;

        &lt;/body&gt;
      &lt;/html&gt;


// STEP 6 - Run a local server ##########################
.l-main-section

  h2#section-load-component-module 6. Run a local server

  p Run a local HTTP server, and view <code>index.html</code>.

  p.
    If you don't already have an HTTP server, you can install one using <code>npm install -g http-server</code>.  (If that results in an access error, then you might need to use <code><b>sudo</b> npm ...</code>) For example:

  pre.prettyprint.code.
      # From the directory that contains index.html:
      npm install -g http-server  # Or sudo npm install -g http-server
      http-server                 # Creates a server at localhost:8080
      # In a browser, visit localhost:8080/index.html

.l-main-section
  h2#section-final-code Final Code
  .code-box
    pre.prettyprint.linenums.lang-html(data-name="index.html")
        code.
          &lt;html&gt;
            &lt;head&gt;
              &lt;title&gt;Angular 2 Quickstart&lt;/title&gt;
              &lt;script src="https://code.angularjs.org/2.0.0-alpha.22/angular2.sfx.dev.js"&gt;&lt;/script&gt;
              &lt;script src="app.js"&gt;&lt;/script&gt;
            &lt;/head&gt;
            &lt;body&gt;

              &lt;!-- The app component created in app.ts --&gt;
              &lt;my-app&gt;&lt;/my-app&gt;

            &lt;/body&gt;
          &lt;/html&gt;
    pre.prettyprint.linenums.lang-javascript(data-name="app.js")
        code.
          function MyAppComponent() { 
            this.name = 'Alice';
          }
          MyAppComponent.annotations = [
            new angular.ComponentAnnotation({ 
              selector: 'my-app'
            }),
            new angular.ViewAnnotation({
              template: '&lt;h1&gt;Hello {{ name }}&lt;/h1&gt;'
            })
          ];
          
          angular.bootstrap(MyAppComponent);

// WHAT'S NEXT... ##########################
.l-main-section
  h2#section-transpile Great job! <a href="/docs/js/latest/guide/">Check out the step by step guide to dive deeper into Angular.</a>
