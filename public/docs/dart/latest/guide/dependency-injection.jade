include ../_util-fns

+includeShared('{ts}', 'intro')

:marked
  The complete source code for the example app in this chapter is
  [in GitHub](https://github.com/angular/angular.io/tree/master/public/docs/_examples/dependency-injection/dart).

+includeShared('{ts}', 'why-1')
+makeExample('dependency-injection/dart/lib/car/car_no_di.dart', 'car', 'lib/car/car.dart (without DI)')
+includeShared('{ts}', 'why-2')
+makeTabs(
  'dependency-injection/dart/lib/car/car.dart, dependency-injection/dart/lib/car/car_no_di.dart',
  'car-ctor, car-ctor',
  'lib/car/car.dart (excerpt with DI), lib/car/car.dart (excerpt without DI)')(format=".")
+includeShared('{ts}', 'why-3')
+includeShared('{ts}', 'why-3-1')
+includeShared('{ts}', 'why-3-2')
- var stylePattern = { otl: /(new Car.*$)/gm };
+makeExample('dependency-injection/dart/lib/car/car_creations.dart', 'car-ctor-instantiation', '', stylePattern)(format=".")
+includeShared('{ts}', 'why-4')
.l-sub-section
  :marked
    The _consumer_ of `Car` has the problem. The consumer must update the car creation code to
    something like this:
  - var stylePattern = { otl: /(new Car.*$)/gm };
  +makeExample('dependency-injection/dart/lib/car/car_creations.dart', 'car-ctor-instantiation-with-param', '', stylePattern)(format=".")
  :marked
    The critical point is this: `Car` itself did not have to change.
    We'll take care of the consumer's problem soon enough.
+includeShared('{ts}', 'why-6')
- var stylePattern = { otl: /(new Car.*$)/gm };
+makeExample('dependency-injection/dart/lib/car/car_creations.dart', 'car-ctor-instantiation-with-mocks', '', stylePattern)(format=".")
+includeShared('{ts}', 'why-7')
+makeExample('dependency-injection/dart/lib/car/car_factory.dart', null, 'lib/car/car_factory.dart')
+includeShared('{ts}', 'why-8')
+makeExample('dependency-injection/dart/lib/car/car_injector.dart','injector-call')(format=".")
+includeShared('{ts}', 'why-9')

+includeShared('{ts}', 'di-1')
+makeTabs(
  `dependency-injection/dart/lib/heroes/heroes_component_1.dart,
  dependency-injection/dart/lib/heroes/hero_list_component_1.dart,
  dependency-injection/dart/lib/heroes/hero.dart,
  dependency-injection/dart/lib/heroes/mock_heroes.dart`,
  'v1,,,',
  `lib/heroes/heroes_component.dart,
  lib/heroes/hero_list_component.dart,
  lib/heroes/hero.dart,
  lib/heroes/mock_heroes.dart`)
+includeShared('{ts}', 'di-2')
+includeShared('{ts}', 'di-3')
+makeExample('dependency-injection/dart/lib/heroes/hero_service_1.dart',null, 'lib/heroes/hero_service.dart' )
+includeShared('{ts}', 'di-4')
+includeShared('{ts}', 'di-5')
+includeShared('{ts}', 'di-6')
+includeShared('{ts}', 'di-configure-injector-1')
+makeExample('dependency-injection/dart/web/main.dart', 'bootstrap', 'web/main.dart (excerpt)')(format='.')
+includeShared('{ts}', 'di-configure-injector-2')
+makeExample('dependency-injection/dart/web/main_1.dart', 'bootstrap')(format='.')
+includeShared('{ts}', 'di-configure-injector-3')
+includeShared('{ts}', 'di-register-providers-1')
+makeExample('dependency-injection/dart/lib/heroes/heroes_component_1.dart',null,'lib/heroes/heroes_component.dart')
+includeShared('{ts}', 'di-register-providers-2')
+makeExample('dependency-injection/dart/lib/heroes/heroes_component_1.dart','providers')(format='.')
+includeShared('{ts}', 'di-register-providers-3')
+includeShared('{ts}', 'di-prepare-for-injection-1')
+makeTabs(
  `dependency-injection/dart/lib/heroes/hero_list_component_2.dart,
  dependency-injection/dart/lib/heroes/hero_list_component_1.dart`,
  null,
  `lib/heroes/hero_list_component (with DI),
   lib/heroes/hero_list_component (without DI)`)
.l-sub-section
  :marked
    ### Focus on the constructor

    Adding a parameter to the constructor isn't all that's happening here.
  +makeExample('dependency-injection/dart/lib/heroes/hero_list_component_2.dart', 'ctor')(format=".")
  +includeShared('{ts}', 'di-prepare-for-injection-2')
+includeShared('{ts}', 'di-create-injector-implicitly-1')
+makeExample('dependency-injection/dart/lib/car/car_injector.dart','injector-create-and-call')(format=".")
+includeShared('{ts}', 'di-create-injector-implicitly-2')
+includeShared('{ts}', 'di-singleton-services')
// +includeShared('{ts}', 'di-testing-component-1')
// +includeShared('{ts}', 'di-testing-component-2')
+includeShared('{ts}', 'di-service-service-1')
+makeTabs(
  `dependency-injection/dart/lib/heroes/hero_service_2.dart,
  dependency-injection/dart/lib/heroes/hero_service_1.dart`,
  null,
  `lib/heroes/hero_service (v.2),
  lib/heroes/hero_service (v.1)`)
+includeShared('{ts}', 'di-service-service-2')
+includeShared('{ts}', 'di-injectable')

+includeShared('{ts}', 'logger-service-1')
+makeExample(
  'dependency-injection/dart/lib/logger_service.dart',null, 'lib/logger_service')
+includeShared('{ts}', 'logger-service-2')
+makeExample('dependency-injection/dart/lib/providers_component.dart','providers-logger', 'lib/app_component.dart (excerpt)')
+includeShared('{ts}', 'logger-service-3')
+includeShared('{ts}', 'logger-service-4')
+makeExample('dependency-injection/dart/lib/providers_component.dart','import-optional')(format='.')
+includeShared('{ts}', 'logger-service-5')
+makeExample('dependency-injection/dart/lib/providers_component.dart','provider-10-ctor')(format='.')
+includeShared('{ts}', 'logger-service-6')
+makeExample('dependency-injection/dart/lib/providers_component.dart','provider-10-logger')(format='.')
+includeShared('{ts}', 'logger-service-7')

+includeShared('{ts}', 'providers-1')
+makeExample('dependency-injection/dart/lib/providers_component.dart','providers-logger')
+includeShared('{ts}', 'providers-2')
+includeShared('{ts}', 'providers-provide-1')
+makeExample('dependency-injection/dart/lib/providers_component.dart','providers-1')
+includeShared('{ts}', 'providers-provide-2')
+makeExample('dependency-injection/dart/lib/providers_component.dart','providers-2')
+includeShared('{ts}', 'providers-provide-3')
+makeExample('dependency-injection/dart/lib/providers_component.dart','providers-3')
+includeShared('{ts}', 'providers-provide-4')
+includeShared('{ts}', 'providers-alternative-1')
+makeExample('dependency-injection/dart/lib/providers_component.dart','providers-4')
+includeShared('{ts}', 'providers-alternative-2')
+makeExample('dependency-injection/dart/lib/providers_component.dart','EvenBetterLogger')
+includeShared('{ts}', 'providers-alternative-3')
+makeExample('dependency-injection/dart/lib/providers_component.dart','providers-5')(format=".")
+includeShared('{ts}', 'providers-aliased-1')
+makeExample('dependency-injection/dart/lib/providers_component.dart','providers-6a')(format=".")
+includeShared('{ts}', 'providers-aliased-2')
+makeExample('dependency-injection/dart/lib/providers_component.dart','providers-6b')(format=".")
+includeShared('{ts}', 'providers-value-1')
+makeExample('dependency-injection/dart/lib/providers_component.dart','silent-logger')(format=".")
+includeShared('{ts}', 'providers-value-2')
+makeExample('dependency-injection/dart/lib/providers_component.dart','providers-7')(format=".")
+includeShared('{ts}', 'providers-factory-1')
+makeExample('dependency-injection/dart/lib/heroes/hero_service.dart','internals', 'lib/heroes/hero_service.dart (excerpt)')(format='.')
+includeShared('{ts}', 'providers-factory-2')
+makeExample('dependency-injection/dart/lib/heroes/hero_service_provider.dart','factory', 'lib/heroes/hero_service_provider.dart (excerpt)')(format='.')
+includeShared('{ts}', 'providers-factory-3')
+makeExample('dependency-injection/dart/lib/heroes/hero_service_provider.dart','provider', 'lib/heroes/hero_service_provider.dart (excerpt)')(format='.')
+includeShared('{ts}', 'providers-factory-4')
+includeShared('{ts}', 'providers-factory-5')
- var stylePattern = { pnk: /(providers.*),$/gm };
+makeTabs(
  `dependency-injection/dart/lib/heroes/heroes_component.dart,
  dependency-injection/dart/lib/heroes/heroes_component_1.dart`,
  null,
  `lib/heroes/heroes_component (v.3),
  lib/heroes/heroes_component (v.2)`,
  stylePattern)
+includeShared('{ts}', 'tokens-1')
+makeExample('dependency-injection/dart/lib/injector_component.dart','get-hero-service')(format='.')
+includeShared('{ts}', 'tokens-2')
+makeExample('dependency-injection/dart/lib/providers_component.dart','provider-8-ctor')(format=".")
+includeShared('{ts}', 'tokens-3')
+includeShared('{ts}', 'tokens-non-class-deps-1')
+makeExample('dependency-injection/dart/lib/app_config.dart','config','lib/app_config.dart (excerpt)')(format='.')
+includeShared('{ts}', 'tokens-non-class-deps-2')
+includeShared('{ts}', 'tokens-string-1')
+makeExample('dependency-injection/dart/lib/providers_component.dart','providers-9a')(format=".")
+includeShared('{ts}', 'tokens-string-2')
+makeExample('dependency-injection/dart/lib/providers_component.dart','provider-9a-ctor')(format=".")
+includeShared('{ts}', 'tokens-opaque-1')
+makeExample('dependency-injection/dart/lib/app_config.dart','token')(format='.')
+includeShared('{ts}', 'tokens-opaque-2')
+makeExample('dependency-injection/dart/lib/providers_component.dart','providers-9b')(format=".")
+makeExample('dependency-injection/dart/lib/providers_component.dart','provider-9b-ctor')(format=".")
+includeShared('{ts}', 'tokens-opaque-3')
+makeExample('dependency-injection/dart/lib/app_component.dart','providers', 'lib/app_component.dart (providers)')(format=".")
+makeExample('dependency-injection/dart/lib/app_component.dart','ctor', 'lib/app_component.dart (constructor)')(format=".")
+includeShared('{ts}', 'tokens-opaque-4')

+includeShared('{ts}', 'summary')

+includeShared('{ts}', 'appendix-explicit-injector-1')
+makeExample('dependency-injection/dart/lib/injector_component.dart', 'injector', 'lib/injector_component.dart')
+includeShared('{ts}', 'appendix-explicit-injector-2')
