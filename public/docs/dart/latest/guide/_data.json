{
  "index": {
    "title": "Documentation Overview",
    "navTitle": "Overview",
    "description": "How to read and use this documentation",
    "nextable": true,
    "basics": true
  },

  "architecture": {
    "title": "Architecture Overview",
    "navTitle": "Architecture",
    "intro": "The basic building blocks of Angular 2 applications",
    "nextable": true,
    "basics": true
  },

  "displaying-data": {
    "title": "Displaying Data",
    "intro": "Interpolation and other forms of property binding help us show app data in the UI.",
    "nextable": true,
    "basics": true
  },

  "user-input": {
    "title": "User Input",
    "intro": "User input triggers DOM events. We listen to those events with event bindings that funnel updated values back into our components and models.",
    "nextable": true,
    "basics": true
  },

  "forms": {
    "title": "Forms",
    "intro": "A form creates a cohesive, effective, and compelling data entry experience. An Angular form coordinates a set of data-bound user controls, tracks changes, validates input, and presents errors.",
    "nextable": true,
    "basics": true
  },

  "dependency-injection": {
    "title": "Dependency Injection",
    "intro": "Angular's dependency injection system creates and delivers dependent services \"just-in-time\".",
    "nextable": true,
    "basics": true
  },

  "template-syntax": {
    "title": "Template Syntax",
    "intro": "Learn how to write templates that display data and consume user events with the help of data binding.",
    "nextable": true,
    "basics": true
  },

  "cheatsheet": {
    "title": "Angular Cheat Sheet",
    "intro": "A quick guide to Angular syntax. (Content is provisional and may change.)",
    "nextable": true,
    "basics": true
  },

  "style-guide": {
    "title": "Style Guide",
    "intro": "Write Angular 2 with style.",
    "basics": true
  },

  "ngmodule": {
    "title": "Angular Modules (NgModule)",
    "intro": "Define application modules with @NgModule",
    "hide": true
  },

  "animations": {
    "title": "Animations",
    "intro": "A guide to Angular's animation system.",
    "hide": true
  },

  "attribute-directives": {
    "title": "Attribute Directives",
    "intro": "Attribute directives attach behavior to elements."
  },

  "browser-support": {
    "title": "Browser support",
    "intro": "Browser support and polyfills guide."
  },

  "component-styles": {
    "title": "Component Styles",
    "intro": "Learn how to apply CSS styles to components."
  },

  "glossary": {
    "title": "Glossary",
    "intro": "Brief definitions of the most important words in the Angular 2 vocabulary",
    "basics": true
  },

  "hierarchical-dependency-injection": {
    "title": "Hierarchical Dependency Injectors",
    "navTitle": "Hierarchical Injectors",
    "intro": "Angular's hierarchical dependency injection system supports nested injectors in parallel with the component tree."
  },

  "server-communication": {
    "title": "HTTP Client",
    "intro": "Talk to a remote server with an HTTP Client."
  },

  "lifecycle-hooks": {
    "title": "Lifecycle Hooks",
    "intro": "Angular calls lifecycle hook methods on directives and components as it creates, changes, and destroys them."
  },

  "npm-packages": {
    "title": "Npm Packages",
    "intro": "Details of the recommended npm packages and the different kinds of package dependencies",
    "hide": true
  },

  "pipes": {
    "title": "Pipes",
    "intro": "Pipes transform displayed values within a template."
  },

  "router": {
    "title": "Routing & Navigation",
    "intro": "Discover the basics of screen navigation with the Angular 2 Component Router."
  },

  "security": {
    "title": "Security",
    "intro": "Developing for content security in Angular applications"
  },

  "structural-directives": {
    "title": "Structural Directives",
    "intro": "Angular has a powerful template engine that lets us easily manipulate the DOM structure of our elements."
  },

  "testing": {
    "title": "Testing",
    "intro": "Techniques and practices for testing an Angular 2 app",
    "hide": true
  },

  "typescript-configuration": {
    "title": "TypeScript Configuration",
    "intro": "TypeScript configuration for Angular 2 developers",
    "hide": true
  },

  "upgrade": {
    "title": "Upgrading from 1.x",
    "intro": "Angular 1 applications can be incrementally upgraded to Angular 2.",
    "hide": true
  },

  "webpack": {
    "title": "Webpack: an introduction",
    "intro": "Create your Angular 2 applications with a Webpack based tooling",
    "hide": true
  }
}
